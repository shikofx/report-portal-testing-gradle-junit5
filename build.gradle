buildscript {
    apply plugin: 'java'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {

    }
}

plugins {
    id "org.sonarqube" version "3.3"
}

group "${applicationGroup}"
version "${applicationVersion}"

targetCompatibility = javaVersion
sourceCompatibility = javaVersion

wrapper {
    gradleVersion = "${gradleWrapperVersion}"
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://repo.gradle.org/gradle/libs-releases-local"
        }
    }

    test {
        useJUnitPlatform()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    group "${applicationGroup}"
    version "${applicationVersion}"

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    compileTestJava {
        options.encoding = "${encoding}"
    }


    dependencies {
        testImplementation group: 'org.junit.jupiter',
                           name: 'junit-jupiter-params',
                           version: "${junitJupiterVesion}"

        testImplementation group: 'org.junit.jupiter',
                           name: 'junit-jupiter-engine',
                           version: "${junitJupiterVesion}"

        testImplementation group: 'org.junit.platform',
                           name: 'junit-platform-runner',
                           version: "${junitPlatformVersion}"

        testImplementation group: 'org.assertj',
                           name: 'assertj-core',
                           version: "${assertJVersion}"

        testImplementation group: 'ch.qos.logback',
                           name: 'logback-classic',
                           version: "${logbackVersion}"

        testImplementation group: 'org.slf4j',
                           name: 'slf4j-log4j12',
                           version: "${slf4jVersion}"

        implementation group: 'com.epam.reportportal',
                       name: 'agent-java-junit5',
                       version: "${reportPortalVersion}"

        implementation group: 'com.epam.reportportal',
                       name: 'logger-java-logback',
                       version: "${reportPortalVersion}"
    }

    def webtests = tasks.register('webtests', Test).configure() {
        useJUnitPlatform {
            includeTags "ui"
        }
    }

    def unittests = tasks.register('unittests', Test).configure() {
        useJUnitPlatform {
            includeTags "unit"
        }
    }
}

test {
    useJUnitPlatform();
}

sonarqube {
    properties {
        property "sonar.projectKey", "report-portal-testing-gradle-junit5"
        property "sonar.sources", "src"
        property "sonar.modules", "common,web-ui"
        property "common.sonar.projectName", "Common"
        property "web-ui.sonar.projectName", "Web-Ui"
        property "sonar.qualitygate.wait", true
        property "sonar.issuesReport.html.enable", true
        property "sonar.secretKeyPath", "zeVPUilQ1feQZoAjHJ7J3SUkA/oMLNaUusUrSWXsbmo="
    }
}



