#!groovy

properties([disableConcurrentBuilds()])

pipeline {

    agent {
        label 'master'
    }

    options {
        timestamps()
        ansiColor('xterm')
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        disableResume()
        durabilityHint('PERFORMANCE_OPTIMIZED')
        disableConcurrentBuilds()
    }

    triggers {
        pollSCM('H/1 * * * *')
    }

    stages {
        stage('Compile') {
            steps {
                gradlew('clean', 'classes')
            }
        }

        stage('Unit Tests') {
            steps {
                gradlew('unittests')
            }

//            post {
//                always {
//                    junit '**/build/test-results/test/TEST-*.xml'
//                }
//            }
        }

        stage('Long Verification') {
            environment {
                SONAR_LOGIN = credentials('SONARQUBE_TOKEN')
                //http://185.231.68.114:9000
                //603f3552c649c87146427863eb7077d3cc50b724
            }
            parallel {
                stage('END-TO-END Tests') {
                    when {
                        branch 'master'
                    }
                    steps {
                        gradlew('webtests')
                    }
//                    post {
//                        always {
//                            junit '**/build/test-results/integrationTest/TEST-*.xml'
//                        }
//                    }
                }

                stage('Code Analysis') {
                    steps { gradlew('sonarcube') }
                }
            }
        }

        stage ('PR task') {
            when {
                branch 'PR-*'
            }

            steps {
                echo 'Steps for PR'
            }
        }

    }
}

def gradlew(String... args) {
    bat "./gradlew ${args.join(' ')} -s"
}